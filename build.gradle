plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'org.flywaydb.flyway' version '10.18.2'
    id "nu.studer.jooq" version "9.0"
}

group = 'onyx'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.flywaydb:flyway-core'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    // jOOQ Dependencies
    implementation group: 'org.jooq', name: 'jooq', version: '3.19.13'
    implementation group: 'org.jooq', name: 'jooq-meta', version: '3.19.13'
    implementation group: 'org.jooq', name: 'jooq-codegen', version: '3.19.13'
    jooqGenerator 'com.h2database:h2'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

// Flyway 설정
flyway {
    url = "jdbc:h2:file:${projectDir}/build/data/testdb;MODE=PostgreSQL;AUTO_SERVER=TRUE;"
    user = 'sa'
    password = ''
    schemas = ['PUBLIC']  // H2 에서는 대문자 사용
}

// jOOQ 설정
jooq {
    version = '3.19.13'
    configurations {
        main {  // jOOQ 설정의 이름
            generateSchemaSourceOnCompilation = true

            generationTool {
                logging = org.jooq.meta.jaxb.Logging.WARN
                jdbc {
                    driver = 'org.h2.Driver'
                    url = "jdbc:h2:file:${projectDir}/build/data/testdb;MODE=PostgreSQL;AUTO_SERVER=TRUE;"
                    user = 'sa'
                    password = ''
                    properties {
                        property {
                            key = 'ssl'
                            value = 'true'
                        }
                    }
                }
                generator {
                    name = 'org.jooq.codegen.DefaultGenerator'
                    database {
                        name = 'org.jooq.meta.h2.H2Database' // H2 방언으로 설정
                        inputSchema = 'PUBLIC' // H2 스키마 이름 대문자 사용
                        forcedTypes {
                            // 필요 시 H2에서 지원하는 타입으로 설정하거나 제거
                            /*
                            forcedType {
                                name = 'varchar'
                                includeExpression = '.*'
                                includeTypes = 'VARCHAR'
                            }
                            */
                        }
                    }
                    generate {
                        deprecated = false
                        records = true
                        immutablePojos = true
                        fluentSetters = true
                    }
                    target {
                        packageName = 'onyx.jooq' // 프로젝트의 기본 패키지와 일치
                    }
                    strategy.name = 'org.jooq.codegen.DefaultGeneratorStrategy'
                }
            }
        }
    }
}
